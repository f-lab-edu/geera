plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'org.sonarqube' version "4.4.1.3373"
}

group = 'com.seungminyi'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}



configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/config/checkstyle/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/config/checkstyle/naver-checkstyle-suppressions.xml"]
    toolVersion = "8.42"
    checkstyleTest.enabled = false
}

pmd {
    ignoreFailures = true
    toolVersion = "6.23.0"
    ruleSetFiles = files("${rootDir}/config/pmd/pmd.xml")
    ruleSets = []
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        html.required = true
    }

    classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, exclude: [
                '**/dto/**',
                "com/seungminyi/geera/GeeraApplication.*",
                "com/seungminyi/geera/exception/**",
                "com/seungminyi/geera/utill/auth/PermissionRoleGroup.*"
        ])
    }))
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }

            excludes = ['**.dto.**']
        }

        rule {
            element = 'CLASS'

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }

            excludes = [
                    '**.dto.**',
                    "com.seungminyi.geera.GeeraApplication",
                    "com.seungminyi.geera.exception.**",
                    "com.seungminyi.geera.utill.auth.PermissionRoleGroup"
            ]
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "f-lab-edu_geera"
        property "sonar.organization", "f-lab-edu"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/jacocoTestReport.xml"
    }
}

dependencies {
    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.4'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'com.google.guava:guava:32.1.3-jre'

    // MyBatis dependencies
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'

    // Database dependencies
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation "com.h2database:h2"

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // JAXB
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
    implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

    // Test dependencies
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'
}

tasks.named('test') {
    finalizedBy 'jacocoTestReport'
    useJUnitPlatform()

    jacoco {
        excludes += ["com/example/thandbag/ThandbagApplication.class",
                     "com/example/thandbag/exceptionHandler/**",
                     "com/example/thandbag/repository/**",
                     "com/example/thandbag/service/KakaoUserService.class"]
    }
}

